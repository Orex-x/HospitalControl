@model DataChartViewModel;

@{
    Layout = "_Layout";
}

<div>
  <canvas id="BarChart" height="200" width="200"></canvas>
  <canvas id="DoughnutChart" height="200" width="200"></canvas>
  <canvas id="LineChart" height="200" width="200"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  const barCTX = document.getElementById('BarChart');
  
  const doughnutCTX = document.getElementById('DoughnutChart');
  
  const lineCTX = document.getElementById('LineChart');

  var BarLabels = [];
  var BarData = [];
  
  var DoughnutLabels = [];
  var DoughnutData = [];
  
  var LineLabels = [];
  var LineData = ["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"];
  
  @if (Model.BarLabels.Count == Model.BarData.Count)
  {
    foreach (var i in Model.BarLabels)
    {
      @:BarLabels.push('@Html.Raw(i)');
      
    }
    
    foreach (var i in Model.BarData)
    {
      @:BarData.push(@i);
    }
  }
  
  new Chart(barCTX, {
    type: 'bar',
    data: {
      labels: BarLabels,
      datasets: [{
        label: '# of Votes',
        data: BarData,
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
  
    new Chart(doughnutCTX, {
      type: 'doughnut',
      data: {
       labels: DoughnutLabels,
        datasets: [{
          label: '# of Votes',
          data: DoughnutData,
          
           hoverOffset: 4
        }]
      }
    });
    
       new Chart(lineCTX, {
          type: 'line',
          data: {
           labels: LineLabels,
            datasets: [{
              label: '# of Votes',
              data: LineData,
              
               hoverOffset: 4
            }]
          },
           fill: false,
           borderColor: 'rgb(75, 192, 192)',
           tension: 0.1
        });
</script>

